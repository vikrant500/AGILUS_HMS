@model HMS.Models.ApppointmentViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styleSheets{
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />

}

<h2>Edit</h2>

@using (Html.BeginForm())
{
     

    <div class="form-horizontal">
        <h4>Appointment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model=>model.DoctorID,new { @id="dochiddenid"})
        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <form class="patient-register-form">
                    <div class="row">

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>Patient<span class="text-danger">*</span></label>
                                @Html.DropDownListFor(x => Model.PatientID, new SelectList(Model.Patients, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "PatientID" })
                                @Html.ValidationMessageFor(model => model.PatientID, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <div class="col-sm-8">
                            &nbsp;
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Patient Phone<span class="text-danger">*</span></label>
                                @Html.TextBox("PatientPhone", "", new { @readonly = "readonly", @class = "form-control", @style = "background-color:#fff" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Patient Email<span class="text-danger">*</span></label>
                                @Html.TextBox("PatientEmail", "", new { @readonly = "readonly", @class = "form-control", @style = "background-color:#fff" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Department<span class="text-danger">*</span></label>
                                @Html.DropDownListFor(x => Model.DepartmentID, new SelectList(Model.Departments, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "DepartmentID" })
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Doctor<span class="text-danger"></span></label>
                                @Html.DropDownListFor(x => Model.DoctorID, new SelectList(""), htmlAttributes: new { @class = "form-control", id = "DoctorID" })
                                @Html.ValidationMessageFor(model => model.DoctorID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Appointment Type<span class="text-danger">*</span></label>
                                @Html.DropDownListFor(x => Model.AppointmentType, new List<SelectListItem> { new SelectListItem() { Text = "-Select Appointment Type-", Value = "" },
                                                                                                    new SelectListItem() { Text = "Regular", Value = "Regular" },
                                                                                                    new SelectListItem() { Text = "WalkIn", Value = "WalkIn" },
                           new SelectListItem() { Text = "Web", Value = "Web" }}, htmlAttributes: new { @class = "form-control", id = "AppointmentType" })
                                @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Date<span class="text-danger">*</span></label>
                                @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>Message<span class="text-danger">*</span></label>
                                @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-8">
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <input type="submit" value="Edit Appointment" class="btn btn-primary submit-btn" />
                        </div>
                        

                        
                    </div>
                </form>
            </div>
        </div>
        </div>
        
}


<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script type="text/javascript">
    $(function () {

        $("#PatientID").on('change', function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetPatientData", "Appointments")',
                data: { ID: $(this).val() },
                error: function () {
                    $("#PatientPhone").val('');
                    $("#PatientEmail").val('');
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#PatientPhone").val(response.data.PatientPhone);
                    $("#PatientEmail").val(response.data.PatientEmail);
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })
        });

        $("#DepartmentID").on('change', function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetDoctorsList", "Appointments")',
                data: { DeptID: $(this).val() },
                contentType: "html",
                error: function () {
                    //$("#CityID").empty();
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#DoctorID").empty();
                    $("#DoctorID").html(response);
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })

        });


        $('input[name="AppointmentDate"]').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            timePicker: true,
            timePickerIncrement: 15,
            startDate: '@Html.Raw(Html.DisplayFor(Model=>Model.AppointmentDate))',
            minDate: moment(),
            autoUpdateInput: false,
            maxYear: parseInt((moment().add(12, 'months').format('yyyy')), 10),
            locale: {
                format: 'DD-MM-YYYY HH:mm:ss'
            }
        }, function (start, end, label) {
            var years = moment().diff(start, 'years');

        });
        $('#AppointmentDate').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD-MM-YYYY HH:mm:ss'));
        });

        $('#AppointmentDate').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        
        $("#PatientID").ready( function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetPatientData", "Appointments")',
                data: { ID: $("#PatientID").val() },
                error: function () {
                    $("#PatientPhone").val('');
                    $("#PatientEmail").val('');
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#PatientPhone").val(response.data.PatientPhone);
                    $("#PatientEmail").val(response.data.PatientEmail);
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })
        });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        
       $("#DepartmentID").ready(function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetDoctorsList", "Appointments")',
                data: { DeptID: $("#DepartmentID").val() },
                contentType: "html",
                error: function () {
                    //$("#CityID").empty();
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#DoctorID").empty();
                    $("#DoctorID").html(response);
                    $("#DoctorID").val($('#dochiddenid').val())
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })

        });

    });
</script>
