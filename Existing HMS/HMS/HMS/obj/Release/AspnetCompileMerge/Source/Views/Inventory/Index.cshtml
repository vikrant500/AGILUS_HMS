@model IEnumerable<HMS.Models.InventoryListVm>

@{
    ViewBag.Title = "Items";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styleSheets{
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.css" rel="stylesheet" />
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.themes.css" rel="stylesheet" />

    <link href="~/assets/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
    @*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">*@
}
<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script src="~/assets/js/jquery.dataTables.min.js"></script>
<script src="//cdn.datatables.net/plug-ins/1.10.11/sorting/date-eu.js" type="text/javascript"></script>
<script src="https://cdn.datatables.net/1.10.23/js/dataTables.bootstrap4.min.js"></script>
<div class="row">
    <div class="col-sm-4 col-3">
        <h4 class="page-title">Inventory/Expense Items</h4>
    </div>
    <div class="col-sm-8 col-9 text-right m-b-20">
        <a href='@Url.Action("Create")' class="btn btn btn-primary btn-rounded float-right"><i class="fa fa-plus"></i> Add Item</a>
    </div>
</div>

<div class="row">
    <div class="col-sm-3">
        <div class="form-group">
            <label>Staff</label>
            @Html.Editor("Staff", "", new { htmlAttributes = new { @class = "form-control", @id = "staffName" } })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="form-group">
            <label>Category</label>
            @Html.Editor("Category", "", new { htmlAttributes = new { @class = "form-control", @id = "Category" } })
        </div>
    </div>
    <div class="col-sm-3">
        <div class="form-group">
            <label>From</label>
            <div class="cal-icon">

                @Html.Editor("From", "", new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.First().Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.First().Date, "", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>
    <div class="col-sm-3">
        <div class="form-group">
            <label>To</label>
            <div class="cal-icon">

                @Html.Editor("To", "", new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>
    </div>

</div>
<div class="row">

    <div class="col-sm-3">

    </div>
    <div class="col-sm-3">

    </div>
    <div class="col-sm-3">

    </div>
    <div class="col-sm-3 col-9 text-right m-b-20" data-html2canvas-ignore="true">
        <a href='' class="btn btn btn-primary btn-rounded float-right" id="filter">filter</a>
    </div>
</div>

<table class="table table-border table-striped custom-table mb-0 inventoryTable">
    <thead>
        <tr>
            <th>Category</th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>


            <th>
                @Html.DisplayNameFor(model => model.StaffName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModeOfPayment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="myTable">
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.CategoryName</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StaffName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModeOfPayment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a href='@Url.Action("Edit",new { id=item.ID})'><i class="fa fa-pencil"></i></a><span style="padding-left:10px;"></span>
                    <a href='@Url.Action("Delete",new { id=item.ID})'><i class="fa fa-trash"></i></a>
                </td>
            </tr>
        }
    </tbody>

</table>
<script src="~/assets/plugins/SweetAlert/sweetalert2@10.js"></script>
<script src="~/assets/plugins/EasyAutocomplete/jquery.easy-autocomplete.js"></script>
<script type="text/javascript">
    $('.inventoryTable').DataTable({
        "order": [[6, "desc"]], //or asc
        "columnDefs": [{ "targets": 3, "type": "date-eu" }],
    });
    $(function () {


        var deptOptions = {
            url: function (departmentName) {
                var ajaxURL = '@Url.Action("GetDepartmentsData","InvoiceReports")' + '?departmentName=' + departmentName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "ID"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    var value = $("#Department").getSelectedItemData().ID;
                    $("#Department").attr("data-procId", value);
                },
                onShowListEvent: function () {
                    $("#Department").attr("data-procId", "");
                }
            }
        };
        $("#Department").easyAutocomplete(deptOptions);
        var catOptions = {
            url: function (departmentName) {
                var ajaxURL = '@Url.Action("GetCategoryData","InvoiceReports")' + '?categoryName=' + departmentName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "ID"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    var value = $("#Category").getSelectedItemData().ID;
                    $("#Category").attr("data-procId", value);
                },
                onShowListEvent: function () {
                    $("#Category").attr("data-procId", "");
                }
            }
        };
        $("#Category").easyAutocomplete(catOptions);

        var staffOptions = {
            url: function (staffName) {
                var ajaxURL = '@Url.Action("GetStaffACData", "StaffSalaries")' + '?staffName=' + staffName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "ID"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    var value = $("#staffName").getSelectedItemData().ID;
                    $("#staffName").attr("dataStaId", value);

                    $.ajax({
                        method: "GET",
                        url: '@Url.Action("GetStaffData", "StaffSalaries")',
                        data: { ID: value },
                        error: function () {
                            $("#PatientID").val('');
                            $("#Gender").val('');
                            $("#ContactNumber").val('');
                            $("#Address").val('');
                        },
                        beforeSend: function () {
                            //$("#OrderOverlay").show()
                        },
                        success: function (response) {
                            $("#staffID").val(response.ID);
                            $("#Amount").val(response.Charges);

                        },
                        complete: function () { $("#OrderOverlay").hide(); }
                    });
                },
                onShowListEvent: function () {
                    $("#staffName").attr("dataStaId", "");
                }
            }
        };
        $("#staffName").easyAutocomplete(staffOptions);
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#From").daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            minYear: 1901,
            maxDate: moment(),
            maxYear: parseInt(moment().format('YYYY'), 10),
            locale: {
            format: 'DD-MM-YYYY'
        }
        }, function (start, end, label) {

        });
        $("#To").daterangepicker({
                    singleDatePicker: true,
                    showDropdowns: true,
                    minYear: 1901,
                    maxDate: moment(),
                    maxYear: parseInt(moment().format('YYYY'), 10),
                    locale: {
                        format: 'DD-MM-YYYY'
                    }
                }, function (start, end, label) {


        });
    });
    $("#filter").click(function(event)
{

  event.preventDefault();
  var url = '@Html.Raw(@Url.Action("Index",  new {@staff = "Staff_Name",@from="From_value",@to="To_value",@category="Department_value"}))';
        url = url.replace("Staff_Name", $("#staffName").val());
        url = url.replace("From_value", $("#From").val());
        url = url.replace("To_value", $("#To").val());
        url = url.replace("Department_value", $("#Category").val());

  window.location.href = url;
});

</script>