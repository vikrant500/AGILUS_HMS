@model HMS.Models.ApppointmentViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styleSheets{
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.css" rel="stylesheet" />
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.themes.css" rel="stylesheet" /> 

}

@using (Html.BeginForm())
{
     


    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <h4 class="page-title">Add Appointment</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <form class="patient-register-form">
                <div class="row">
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label>Patient Name<span class="text-danger">*</span></label>
                            @Html.Editor("PatientName", "", new { htmlAttributes = new { @class = "form-control", @dataPatId = "", @style = "width:100% !important" } })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            <label>PatientID<span class="text-danger">*</span></label>
                            @Html.EditorFor(model => model.PatientID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-8">
                        &nbsp;
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Patient Phone<span class="text-danger">*</span></label>
                            @Html.TextBox("PatientPhone", "", new { @readonly = "readonly", @class = "form-control", @style = "background-color:#fff" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Patient Email</label>
                            @Html.TextBox("PatientEmail", "", new { @readonly = "readonly", @class = "form-control", @style = "background-color:#fff" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Department<span class="text-danger">*</span></label>
                            @Html.DropDownListFor(x => Model.DepartmentID, new SelectList(Model.Departments, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "DepartmentID" })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Doctor<span class="text-danger"></span></label>
                            @Html.DropDownListFor(x => Model.DoctorID, new SelectList(""), htmlAttributes: new { @class = "form-control", id = "DoctorID" })
                            @Html.ValidationMessageFor(model => model.DoctorID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Appointment Type<span class="text-danger">*</span></label>
                            @Html.DropDownListFor(x => Model.AppointmentType, new List<SelectListItem> { new SelectListItem() { Text = "-Select Appointment Type-", Value = "" },
                                                                                                new SelectListItem() { Text = "Regular", Value = "Regular" },
                                                                                                new SelectListItem() { Text = "WalkIn", Value = "WalkIn" },
                       new SelectListItem() { Text = "Web", Value = "Web" }}, htmlAttributes: new { @class = "form-control", id = "AppointmentType" })
                            @Html.ValidationMessageFor(model => model.AppointmentType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Date<span class="text-danger">*</span></label>
                            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="form-group">
                            <label>Message</label>
                            @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-8">
                    </div>
                    <div class="col-sm-6">
                        <input type="submit" value="Create Appointment" class="btn btn-primary submit-btn" />
                    </div>
                    <div class="col-sm-6">
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.ActionLink("Back to List", "Index")
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
}

<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script src="~/assets/plugins/EasyAutocomplete/jquery.easy-autocomplete.js"></script>
<script type="text/javascript">
    $(function () {

        $("#PatientID").on('change', function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetPatientData", "Appointments")',
                data: { ID: $(this).val() },
                error: function () {
                    $("#PatientPhone").val('');
                    $("#PatientEmail").val('');
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#PatientPhone").val(response.data.PatientPhone);
                    $("#PatientEmail").val(response.data.PatientEmail);
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })
        });

        $("#DepartmentID").on('change', function () {
            $.ajax({
                method: "GET",
                url: '@Url.Action("GetDoctorsList", "Appointments")',
                data: { DeptID: $(this).val() },
                contentType: "html",
                error: function () {
                    //$("#CityID").empty();
                },
                beforeSend: function () {
                    //$("#OrderOverlay").show()
                },
                success: function (response) {
                    $("#DoctorID").empty();
                    $("#DoctorID").html(response);
                },
                complete: function () { $("#OrderOverlay").hide(); }
            })

        });


        $('input[name="AppointmentDate"]').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            timePicker: true,
            timePickerIncrement:10,
            minDate: moment(),
            maxYear: parseInt((moment().add(12, 'months').format('yyyy')), 10),
            locale: {
                format: 'YYYY-MM-DD HH:mm:ss'
            }
        }, function (start, end, label) {
            var years = moment().diff(start, 'years');

        });
    });
    var patientOptions = {
            url: function (patientName) {
                var ajaxURL = '@Url.Action("GetPatientACCData", "Invoices")' + '?patientName=' + patientName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "ID"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    console.log($("#PatientName").getSelectedItemData())
                    var value = $("#PatientName").getSelectedItemData().ID;
                    $("#PatientName").attr("dataPatId", value);

                    $.ajax({
                        method: "GET",
                        url: '@Url.Action("GetPatientData", "Invoices")',
                        data: { ID: value },
                        error: function () {
                            $("#PatientID").val('');
                            $("#Gender").val('');
                            $("#ContactNumber").val('');
                            $("#Address").val('');
                        },
                        beforeSend: function () {
                            //$("#OrderOverlay").show()
                        },
                        success: function (response) {
                            $("#PatientID").val(response.ID);
                            $("#Gender").val(response.Gender);
                            $("#ContactNumber").val(response.ContactNumber);
                            $("#Address").val(response.Address);
                            $("#PatientPhone").val(response.ContactNumber);
                            $("#PatientEmail").val(response.Email);
                        
                            $("#FullName").val(response.FirstName+' '+response.LastName)

                        },
                        complete: function () { $("#OrderOverlay").hide(); }
                    });
                },
                onShowListEvent: function () {
                    $("#PatientName").attr("dataPatId", "");
                }
            }
        };
        $("#PatientName").easyAutocomplete(patientOptions);
</script>
