@model HMS.Models.JustDial

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




@section styleSheets{
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.css" rel="stylesheet" />
    <link href="~/assets/plugins/EasyAutocomplete/easy-autocomplete.themes.css" rel="stylesheet" />
}
@using (Html.BeginForm())
{
     
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <h4 class="page-title">Create </h4>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-8 offset-lg-2">
            <div class="card">
                <div class="card-body">
                    <div class="row">

                        <div class="col-sm-8">
                            <div class="form-group">
                                <label>Patient Name<span class="text-danger">*</span></label>
                                @Html.Editor("PatientName", "", new { htmlAttributes = new { @class = "form-control", @dataPatId = "", @style = "width:100% !important" } })
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Department</label>
                                    @Html.EditorFor(x => Model.Department, new { htmlAttributes = new { @class = "form-control", } })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Procedure</label>
                                    @Html.EditorFor(x => Model.Procedure, new { htmlAttributes = new { @class = "form-control", } })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.EditorFor(x => Model.Email, new { htmlAttributes = new { @class = "form-control", } })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Phone Number</label>
                                    @Html.EditorFor(x => Model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Message</label>
                                    @Html.TextAreaFor(model => model.Message, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-sm-6">
                                <input type="submit" value="Create" class="btn btn-info" />
                            </div>
                            <div class="col-sm-6">
                            </div>

                            <div class="col-sm-6" style="margin-top:20px;">
                                <div class="form-group">
                                    @Html.ActionLink("Back to List", "Index", null, new { @style = "font-size:12px;" })
                                </div>
                            </div>
                        </div>

                </div>
            </div>
        </div>
    </div>
        </div>
}



<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script src="~/assets/plugins/SweetAlert/sweetalert2@10.js"></script>
<script src="~/assets/plugins/EasyAutocomplete/jquery.easy-autocomplete.js"></script>

<script type="text/javascript">
    $(function () {
        var procOptions = {
            url: function (procedureName) {
                var ajaxURL = '@Url.Action("GetProceduresData","Invoices")' + '?procedureName='+procedureName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "Price"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    var value = $("#ProcName").getSelectedItemData().ID;
                    $("#ProcName").attr("data-procId", value);
                },
                onShowListEvent: function () {
                    $("#ProcName").attr("data-procId", "");
                }
            }
        };
        $("#ProcName").easyAutocomplete(procOptions);

        var patientOptions = {
            url: function (patientName) {
                var ajaxURL = '@Url.Action("GetPatientACData", "Invoices")' + '?patientName=' + patientName;
                return ajaxURL;
            },
            getValue: "Name",
            template: {
                type: "description",
                fields: {
                    description: "ID"
                }
            },

            list: {
                onSelectItemEvent: function () {
                    var value = $("#PatientName").getSelectedItemData().ID;
                    $("#PatientName").attr("dataPatId", value);

                    $.ajax({
                        method: "GET",
                        url: '@Url.Action("GetPatientData", "Invoices")',
                        data: { ID: value },
                        error: function () {
                            $("#PatientId").val('');
                            $("#Gender").val('');
                            $("#ContactNumber").val('');
                            $("#Address").val('');
                        },
                        beforeSend: function () {
                            //$("#OrderOverlay").show()
                        },
                        success: function (response) {
                            $("#PatientId").val(response.ID);
                            $("#Gender").val(response.Gender);
                            $("#ContactNumber").val(response.ContactNumber);
                            $("#Address").val(response.Address);
                            $("#FullName").val(response.FirstName+' '+response.LastName)

                        },
                        complete: function () { $("#OrderOverlay").hide(); }
                    });
                },
                onShowListEvent: function () {
                    $("#PatientName").attr("dataPatId", "");
                }
            }
        };
        $("#PatientName").easyAutocomplete(patientOptions);
         

        @*$(document).on("submit", "form", function (event) {

            event.preventDefault();

            var formValues = $(this).serialize();
            url = $("form").attr('action');
            var formPost = $.post(url, formValues);
            formPost.done(function (data) {
                if (data == '1') {
                    Swal.fire({
                        icon: 'success',
                        title: 'Saved',
                        text: 'Invoice Created'
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.value==true) {
                            location.href = '@Url.Action("Index", "JustDials")';
                        }
                    });
                }
                else if (data == '0') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred'
                    });
                }
            });
        });*@
    });

</script>