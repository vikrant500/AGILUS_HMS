@model HMS.Models.Patient

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this Patient?</h3>
<div>
    <hr />
    @using (Html.BeginForm())
    {
         
        @Html.HiddenFor(x => x.ID)
        @Html.HiddenFor(x => x.DateCreated)

        <div class="row">
            <div class="col-lg-8 offset-lg-2">
                <div class="card">

                    <div class="card-body">
                        <div class="row">

                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Title<span class="text-danger">*</span></label>
                                    @Html.EditorFor(x => Model.Salutation, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            </div>
                            <div class="col-sm-8">
                                &nbsp;
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>First Name<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Middle Name<span class="text-danger"></span></label>
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Last Name<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Gender<span class="text-danger">*</span></label>
                                    @Html.EditorFor(x => Model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Date of Birth<span class="text-danger">*</span></label>
                                    (DOB not known)
                                    <input type="checkbox" name="dobNotKnown" value="dobNotKnown" id="dobNotKnown">
                                    <div class="cal-icon">
                                        @{if (Model.DateOfBirth.HasValue)
                                            {
                                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })


                                            }
                                        }

                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Age<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Marital Status<span class="text-danger">*</span></label>
                                    @Html.EditorFor(x => Model.MarialStatus, new { htmlAttributes = new { @class = "form-control", id = "MarialStatus" } })

                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Aadhar Card Id</label>
                                    @Html.EditorFor(model => model.AadhaarID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AadhaarID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Calling Number<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.CallingNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CallingNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Whatsapp Number<span class="text-danger">*</span></label>
                                    <label class="form-check-label"></label>
                                    (Same as Calling Number)
                                    <input type="checkbox" name="chkSameCallingNumber" value="Whatsapp" id="chkSameCallingNumber">

                                    @Html.EditorFor(model => model.WhatsappNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.WhatsappNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Email</label>
                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Occupation <span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-3">
                                <div class="form-group">
                                    <label>Guardian</label>
                                    @Html.EditorFor(x => Model.CareofGuardian, new { htmlAttributes = new { @class = "form-control", id = "CareofGuardian" } })
                                    @Html.ValidationMessageFor(model => model.CareofGuardian, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-9">
                                <div class="form-group">
                                    <label>Guardian Name</label>
                                    @Html.EditorFor(model => model.GuardianName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GuardianName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Address<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>City<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Pincode<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Center<span class="text-danger">*</span></label>
                                    @Html.EditorFor(x => Model.CenterID, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Patient Reference<span class="text-danger">*</span></label>
                                    @Html.EditorFor(model => model.PatientReference, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PatientReference, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Status<span class="text-danger">*</span></label>
                                    @Html.EditorFor(x => Model.Status, new { htmlAttributes = new { @class = "form-control", id = "Status" } })
                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                     
                                    <button type="submit" value="Delete" class="btn btn-info"> Delete </button>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                &nbsp;
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.ActionLink("Back to List", "Index", null, new { @style = "font-size:12px;" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }

</div>
<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script type="text/javascript">
    $("input").attr("disabled", true);
</script>
<script src="~/assets/js/jquery-3.2.1.min.js"></script>
<script type="text/javascript">
    $(function () {

        console.log("date:@(Model.DateOfBirth.HasValue?Model.DateOfBirth.Value.ToString("yyyy-MM-dd") :DateTime.Today.ToString("yyyy-MM-dd"))")
        $('input[name="DateOfBirth"]').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            minYear: 1901,
            maxDate: moment(),
            startDate: moment("@(Model.DateOfBirth.HasValue?Model.DateOfBirth.Value.Date.ToShortDateString().ToString() :DateTime.Today.ToString("dd-MM-yyyy"))",'DD-MM-YYYY').format('YYYY/MM/DD'),
            maxYear: parseInt(moment().format('YYYY'), 10),
            locale: {
                format: 'YYYY-MM-DD'
            }
            }, function (start, end, label) {
                var years = moment().diff(start, 'years');
            $("#Age").val(years);
            });
        $('input[name="dobNotKnown"]').click(function () {
            if ($(this).prop("checked") == true) {
                $("#DateOfBirth").val($("").val());
            }
            else if ($(this).prop("checked") == false) {
                $("").val('');
            }
        });

        $('input[name="chkSameCallingNumber"]').click(function () {
                if ($(this).prop("checked") == true) {
                $("#WhatsappNumber").val($("#CallingNumber").val());
                }
            else if ($(this).prop("checked") == false) {
                $("#WhatsappNumber").val('');
                }
            });
        });
</script>